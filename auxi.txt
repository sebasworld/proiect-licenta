'''
        if  username is not None and len(username) < 3:
            flash('Numele de utilizator trebuie sa fie de minim 2 caractere!', category='error')
        elif password is not None and len(password) < 5:
            flash('Parola trebuie sa fie de minim 5 caractere!', category='error')
        elif password != password1:
            flash('Cele două parole nu sunt identice!', category='error')
        else:
            flash('Cont creat cu succes!', category='success')
'''  



  {% with messages = get_flashed_messages(with_categories=true) %}
  {% if messages %}
    {% for category, message in messages %}
    {% if category == 'error'%}
      <div class="alert alert-danger alter-dismissable fade show" role="alert">
        {{ message }}
       <button type="button" class="close" data-dismiss="alert">
          <span aria-hidden="true">&times;</span>
       </button>
      </div>
    {% else %}
      <div class="alert alert-success alter-dismissable fade show" role="alert">
        {{ message }}
       <button type="button" class="close" data-dismiss="alert">
          <span aria-hidden="true">&times;</span>
       </button>
      </div>
    {% endif %}
    {% endfor %}
  {% endif %}
  {% endwith %}



  from flask import request, render_template
import psycopg2

@app.route('/filter', methods=['GET', 'POST'])
def filter_data():
    conn = psycopg2.connect(database="mydatabase", user="myusername", password="mypassword", host="localhost", port="5432")
    cur = conn.cursor()

    if request.method == 'POST':
        category = request.form.get('category')
        price_min = request.form.get('price_min')
        price_max = request.form.get('price_max')

        # Start with a basic query that selects all products
        query = "SELECT * FROM products WHERE 1 = 1"

        # Dynamically add filters based on user input
        if category:
            query += " AND category = %s"
        if price_min:
            query += " AND price >= %s"
        if price_max:
            query += " AND price <= %s"

        # Execute the query with the appropriate parameters
        cur.execute(query, (category, price_min, price_max))

        data = cur.fetchall()
        conn.close()
        return render_template('filtered_data.html', data=data)

    else:
        return render_template('filter_form.html')


To display the data based on the user type and the specific user, you can retrieve the data from the session using the user type and user ID.

Here's an example of how you can differentiate between users and retrieve their data:

```python
@app.route('/display_data')
def display_data():
    if 'user' in session:
        user_type = session['user']['type']
        user_id = session['user']['id']

        if user_type == 'student':
            if user_id in session.get('student', {}):
                student_data = session['student'][user_id]
                # Display student data

        elif user_type == 'elev':
            if user_id in session.get('elev', {}):
                elev_data = session['elev'][user_id]
                # Display elev data

    # Continue with your rendering logic or redirect as needed
```

In this example, we first check if the `'user'` key exists in the session to ensure that a user is logged in. Then, we retrieve the user type and user ID from the session. Based on the user type, we retrieve the corresponding data from the session using the user ID.

Make sure that when storing the data in the session, you use the same structure (`session['student']` and `session['elev']`) to store the data for each user type.


<img src="data:image/png;base64,{{ ready_list_facs[i][9] }}" alt="Image" width = "200"

<div class="column" style = "font-size: 20px;">
                <p><b>Universitate : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][0] }}</p>
              </div>
              
              <div class="column" style="font-size: 20px;">
                  <p><b>Facultate : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][1] }}</p>
              </div>

                    
              <div class="column" style = "font-size: 20px;">
                <p><b>Locatie : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][2] }}</p>
              </div>
              
              <div class="column" style="font-size: 20px;">
                  <p><b>Rating : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][3] }} /5</p>
              </div>
                    
              <div class="column" style = "font-size: 20px;">
                <p><b>Durată licenta : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][4] }} ani</p>
              </div>
              
              <div class="column" style="font-size: 20px;">
                  <p><b>Plată : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][5] }}</p>
              </div>
                    
              <div class="column" style = "font-size: 20px;">
                <p><b>Ultima medie de intrare de la ultima admitere : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][6] }}</p>
              </div>
              
              <div class="column" style="font-size: 20px;">
                  <p><b>Domenii de studiu : </b></p>
                  <p>{{ ready_list_facs_prof_cons[i][7] }}</p>
              </div>

              <div class="column" style="font-size: 20px;">
                <p><b>Programe studiu : </b></p>
                <p>{{ ready_list_facs_prof_cons[i][8] }}</p>
            </div>

            <div class="column" style="font-size: 20px;">
              <p><b>Nivel master: </b></p>
              <p>{{ ready_list_facs_prof_cons[i][9] }}</p>
          </div>

            <div class="column" style="font-size: 20px;">
              <p><b>Aspecte aprofundate in cadrul masterelor: </b></p>
              <p>{{ ready_list_facs_prof_cons[i][10] }}</p>
          </div>

            <div class="column" style="font-size: 20px;">
              <p><b>Format studiu master: </b></p>
              <p>{{ ready_list_facs_prof_cons[i][11] }}</p>
          </div>
            <br><br><br>